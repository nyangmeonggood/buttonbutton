{"version":3,"sources":["btnContainer.js","SVGfilter.js","Buttons.js","createElem.js","App.js","index.js"],"names":["btnContainer","name","type","skill","text","SVGfilter","style","display","id","in","stdDeviation","result","values","in2","Buttons","useEffect","document","querySelector","innerHTML","Container","map","item","Box","ButtonArea","Button","className","replace","TextSpan","InfoArea","Type","Name","styled","section","Math","floor","length","div","button","span","h2","Header","header","MainButton","MainTextSpan","App","useState","buttonText","setButtonText","isLoaded","setIsLoaded","inputRef","useRef","randomMainTitle","filter","randomClass","random","onClick","cn","value","onChange","e","target","maxLength","ref","ReactDOM","render","StrictMode","getElementById"],"mappings":"ySAAaA,EAAe,CAC1B,CAAEC,KAAM,aAAcC,KAAM,QAASC,MAAO,MAAOC,MAAM,GACzD,CAAEH,KAAM,SAAUC,KAAM,QAASC,MAAO,MAAOC,MAAM,GACrD,CAAEH,KAAM,QAASC,KAAM,QAASC,MAAO,MAAOC,MAAM,GACpD,CAAEH,KAAM,QAASC,KAAM,QAASC,MAAO,aAAcC,MAAM,I,MCJ9C,SAASC,IACtB,OACE,qBAAKC,MAAO,CAAEC,QAAS,QAAvB,SACE,+BACE,yBAAQC,GAAG,MAAX,UACE,gCAAgBC,GAAG,gBAAgBC,aAAa,KAAKC,OAAO,QAC5D,+BACEF,GAAG,MACHP,KAAK,SACLU,OAAO,oDAIPD,OAAO,QAET,yBAASF,GAAG,gBAAgBI,IAAI,e,2xDCR3B,SAASC,EAAT,GAA4B,IAATV,EAAQ,EAARA,KAKhC,OAJAW,qBAAU,WCPVC,SAASC,cAAc,UAAUC,UAAjC,2EDYE,eAACC,EAAD,WACGnB,EAAaoB,KAAI,SAACC,GACjB,OACE,eAACC,EAAD,WACE,cAACC,EAAD,UACGF,EAAKjB,KACJ,cAACoB,EAAD,CAAQC,UAAWJ,EAAKpB,KAAKyB,QAAQ,MAAO,IAA5C,SAAkDtB,IAElD,qCACE,cAACoB,EAAD,CAAQC,UAAWJ,EAAKpB,KAAKyB,QAAQ,MAAO,MAC5C,cAACC,EAAD,UAAWvB,SAIjB,eAACwB,EAAD,WACE,eAACC,EAAD,WACGR,EAAKnB,KADR,MACiBmB,EAAKlB,SAEtB,cAAC2B,EAAD,UAAOT,EAAKpB,YAfNoB,EAAKpB,KAAKyB,QAAQ,MAAO,QAoBvC,cAACrB,EAAD,OAKN,IAAMc,EAAYY,IAAOC,QAAV,IAEgBC,KAAKC,MAAMlC,EAAamC,OAAS,IAa1Db,EAAMS,IAAOK,IAAV,KAWHb,EAAaQ,IAAOK,IAAV,KAMVZ,EAASO,IAAOM,OAAV,KAQNV,EAAWI,IAAOO,KAAV,KASRV,EAAWG,IAAOK,IAAV,KAYRP,EAAOE,IAAOO,KAAV,KAYJR,EAAOC,IAAOQ,GAAV,K,+yBE9CV,IAAMC,EAAST,IAAOU,OAAV,KAuBNC,GARaX,IAAOK,IAAV,KAQGL,IAAOM,OAAV,MAOVM,EAAeZ,IAAOO,KAAV,KAOHM,EAhGf,WAAgB,IAAD,EACuBC,mBAAS,UADhC,mBACNC,EADM,KACMC,EADN,OAEmBF,oBAAS,GAF5B,mBAENG,EAFM,KAEIC,EAFJ,KAGPC,EAAWC,iBAAO,MAclBC,EAAkBpD,EAAaqD,QACnC,SAAChC,GAAD,MAAyB,eAAfA,EAAKlB,SAEXmD,EACJF,EAAgBnB,KAAKC,MAAMD,KAAKsB,SAAWH,EAAgBjB,SAE7D,OACE,qCACE,cAACK,EAAD,CACEgB,QAjBc,WAClBP,GAAY,IAiBRxB,UAAWgC,IAAIT,EAAyB,GAAd,aAF5B,SAIGM,EAAYlD,KACX,cAACsC,EAAD,CAAYjB,UAAW6B,EAAYrD,KAAKyB,QAAQ,MAAO,IAAvD,SACGsB,EAAW,eAAiB,gBAG/B,qCACE,cAACN,EAAD,CACEjB,UAAW6B,EAAYrD,KAAKyB,QAAQ,MAAO,MAE7C,cAACiB,EAAD,UACGK,EAAW,eAAiB,qBAKpCA,GACC,uBACEvB,UAAU,YACVvB,KAAK,OACLwD,MAAOZ,EACPa,SA5CS,SAACC,GAChBb,EAAca,EAAEC,OAAOH,QA4CjBI,UAAU,IACVC,IAAKb,IAGRF,GAAY,cAAClC,EAAD,CAASV,KAAM0C,QC3DlCkB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFlD,SAASmD,eAAe,W","file":"static/js/main.f09e26a4.chunk.js","sourcesContent":["export const btnContainer = [\r\n  { name: \"Clicker 3D\", type: \"Click\", skill: \"CSS\", text: true },\r\n  { name: \"SkewBG\", type: \"Hover\", skill: \"CSS\", text: true },\r\n  { name: \"Wavey\", type: \"Click\", skill: \"CSS\", text: true },\r\n  { name: \"Gooey\", type: \"Hover\", skill: \"SVG Filter\", text: false },\r\n];\r\n","export default function SVGfilter() {\r\n  return (\r\n    <svg style={{ display: \"none\" }}>\r\n      <defs>\r\n        <filter id=\"goo\">\r\n          <feGaussianBlur in=\"SourceGraphic\" stdDeviation=\"10\" result=\"abb\" />\r\n          <feColorMatrix\r\n            in=\"abb\"\r\n            type=\"matrix\"\r\n            values=\" 1 0 0 0 0\r\n                    0 1 0 0 0\r\n                    0 0 1 0 0\r\n                    0 0 0 36 -10\"\r\n            result=\"abb\"\r\n          />\r\n          <feBlend in=\"SourceGraphic\" in2=\"abb\" />\r\n        </filter>\r\n      </defs>\r\n    </svg>\r\n  );\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { btnContainer } from \"./btnContainer.js\";\r\nimport { createElem } from \"./createElem.js\";\r\nimport \"./scss/style.scss\";\r\nimport SVGfilter from \"./SVGfilter.js\";\r\n\r\nexport default function Buttons({ text }) {\r\n  useEffect(() => {\r\n    createElem();\r\n  });\r\n\r\n  return (\r\n    <Container>\r\n      {btnContainer.map((item) => {\r\n        return (\r\n          <Box key={item.name.replace(/ /gi, \"\")}>\r\n            <ButtonArea>\r\n              {item.text ? (\r\n                <Button className={item.name.replace(/ /gi, \"\")}>{text}</Button>\r\n              ) : (\r\n                <>\r\n                  <Button className={item.name.replace(/ /gi, \"\")}></Button>\r\n                  <TextSpan>{text}</TextSpan>\r\n                </>\r\n              )}\r\n            </ButtonArea>\r\n            <InfoArea>\r\n              <Type>\r\n                {item.type} | {item.skill}\r\n              </Type>\r\n              <Name>{item.name}</Name>\r\n            </InfoArea>\r\n          </Box>\r\n        );\r\n      })}\r\n      <SVGfilter />\r\n    </Container>\r\n  );\r\n}\r\n\r\nconst Container = styled.section`\r\n  display: grid;\r\n  grid-template-rows: repeat(${Math.floor(btnContainer.length / 3)}, 300px);\r\n  grid-template-columns: repeat(4, 1fr);\r\n  width: 100%;\r\n  max-width: 1920px;\r\n  margin: 0 auto;\r\n  padding: 0 10px;\r\n  box-sizing: border-box;\r\n\r\n  @media screen and (max-width: 900px) {\r\n    grid-template-columns: repeat(2, 1fr);\r\n  }\r\n`;\r\n\r\nconst Box = styled.div`\r\n  border: 1px dotted #111;\r\n  margin: 10px;\r\n  padding: 10px;\r\n  box-sizing: border-box;\r\n\r\n  @media screen and (max-width: 900px) {\r\n    padding-bottom: 4px;\r\n  }\r\n`;\r\n\r\nconst ButtonArea = styled.div`\r\n  position: relative;\r\n  width: 100%;\r\n  height: 200px;\r\n`;\r\n\r\nconst Button = styled.button`\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  font-weight: bold;\r\n`;\r\n\r\nconst TextSpan = styled.span`\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  z-index: 1;\r\n  font-weight: bold;\r\n`;\r\n\r\nconst InfoArea = styled.div`\r\n  height: 60px;\r\n  display: flex;\r\n  align-items: flex-start;\r\n  justify-content: center;\r\n  flex-direction: column;\r\n\r\n  @media screen and (max-width: 900px) {\r\n    height: 56px;\r\n  }\r\n`;\r\n\r\nconst Type = styled.span`\r\n  display: inline-block;\r\n  font-size: 14px;\r\n  margin-bottom: 4px;\r\n  color: rgba(0, 0, 0, 0.5);\r\n\r\n  @media screen and (max-width: 900px) {\r\n    font-size: 0.6em;\r\n    margin-bottom: 8px;\r\n  }\r\n`;\r\n\r\nconst Name = styled.h2`\r\n  font-weight: bold;\r\n  font-size: 22px;\r\n\r\n  @media screen and (max-width: 900px) {\r\n    font-size: 1.2em;\r\n  }\r\n`;\r\n","export const createElem = () => {\r\n  document.querySelector(\".Gooey\").innerHTML = `<div class=\"blurred\">\r\n    <span></span>\r\n    <span></span>\r\n  </div>`;\r\n};\r\n","import \"./App.css\";\nimport \"./reset.css\";\nimport \"./scss/main.scss\";\nimport { useEffect, useRef, useState } from \"react\";\nimport styled from \"styled-components\";\nimport cn from \"classnames\";\nimport { btnContainer } from \"./btnContainer\";\nimport Buttons from \"./Buttons\";\n\nfunction App() {\n  const [buttonText, setButtonText] = useState(\"Button\");\n  const [isLoaded, setIsLoaded] = useState(false);\n  const inputRef = useRef(null);\n\n  const onChange = (e) => {\n    setButtonText(e.target.value);\n  };\n\n  const loadedClick = () => {\n    setIsLoaded(true);\n  };\n\n  // useEffect(() => {\n  //   inputRef.current.focus();\n  // });\n\n  const randomMainTitle = btnContainer.filter(\n    (item) => item.skill !== \"SVG Filter\"\n  );\n  const randomClass =\n    randomMainTitle[Math.floor(Math.random() * randomMainTitle.length)];\n\n  return (\n    <>\n      <Header\n        onClick={loadedClick}\n        className={cn(!isLoaded ? \"notLoaded\" : \"\")}\n      >\n        {randomClass.text ? (\n          <MainButton className={randomClass.name.replace(/ /gi, \"\")}>\n            {isLoaded ? \"ButtonButton\" : \"Click Here!\"}\n          </MainButton>\n        ) : (\n          <>\n            <MainButton\n              className={randomClass.name.replace(/ /gi, \"\")}\n            ></MainButton>\n            <MainTextSpan>\n              {isLoaded ? \"ButtonButton\" : \"Click Here!\"}\n            </MainTextSpan>\n          </>\n        )}\n      </Header>\n      {isLoaded && (\n        <input\n          className=\"textInput\"\n          type=\"text\"\n          value={buttonText}\n          onChange={onChange}\n          maxLength=\"6\"\n          ref={inputRef}\n        ></input>\n      )}\n      {isLoaded && <Buttons text={buttonText} />}\n    </>\n  );\n}\n\nconst Header = styled.header`\n  position: relative;\n  width: 100%;\n  margin-top: 100px;\n  padding-top: 260px;\n  height: 120px;\n  transition: height 1s;\n\n  &.notLoaded {\n    height: 100vh;\n    padding-top: 0px;\n    margin-top: 0px;\n  }\n`;\n\nconst TitleGreet = styled.div`\n  position: absolute;\n  top: 100px;\n  left: 50%;\n  transform: translateX(-50%);\n  display: block;\n`;\n\nconst MainButton = styled.button`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%) scale(1.5);\n`;\n\nconst MainTextSpan = styled.span`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%) scale(1.2);\n  z-index: 1;\n`;\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App.js\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}